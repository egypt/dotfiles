[include]
  path = ~/.githubconfig
[user]
  name = James Lee
  email = egypt@metasploit.com

[push]
  default = current

[pull]
  ff = only

[alias]
  branch-current = rev-parse --abbrev-ref HEAD
  bv = branch -vv
  c = commit -S --edit
  ci = commit -S --edit
  co = checkout
  land = !"git checkout upstream/master && git m upstream/pull/$1 -em\"Land #$1, \"  #"
  lol = log --date=iso --graph --pretty=format:'%G? %C(red)%h%C(reset) %C(green)(%cd) %C(reset)-%C(yellow)%d%C(reset) %s %C(bold blue)<%an>%C(reset)' --abbrev-commit
  mergelog = log --merges --pretty=format:'[%G?] %Cred%h %p%Creset -%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
  m = merge -S --no-ff --edit
  nicelog = log --pretty=format:'[%G?] %Cred%h%Creset -%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'
  pr-url =!"echo https://github.com/jlee-r7/metasploit-framework/pull/new/$1:$2...$(git branch-current) #"
  publish = push upstream upstream-master:master
  rlsnotes = !"git nicelog --first-parent $1...$2 | sed -r \"s:\\x1B\\[[0-9;]*[mK]::g\" | cut -f 2-99 -d '-' | sort -n | grep -i ' Land' | sed s:Land:PR:g #  #"
  sign-rebase = !"GIT_SEQUENCE_EDITOR='sed -i s/^pick/e/' sh -c 'git rebase -i $1 && while test -f .git/rebase-merge/interactive; do git commit -S --amend --no-edit --no-verify && git rebase --continue; done' -"
  stat = status
  st = status
  stu = status -u
  tryland = !"git checkout upstream/pr/$1 2>/dev/null && git checkout -b land-$1-$2 #"

[color]
  ui = true
[color "diff"]
  whitespace = red reverse
[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[core]
  whitespace = fix,-indent-with-non-tab,trailing-space,cr-at-eol,space-before-tab
  autocrlf = false

[status]
  showUntrackedFiles = no

[mailmap]
  file = ~/.mailmap
